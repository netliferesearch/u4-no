// Mosaic Grid Container
// Can contain 4 to 10 children
.c-mosaic {
  display: flex;
  flex-wrap: wrap;
}
.c-mosaic_item {
  width: 100%;
  background-size: cover;
  background: $brand-medium;
  word-break: normal;
  @include mq($from: tablet) {
    width: 49%;
    margin: 0.5%;
  }
  @include mq($from: desktop) {
    width: 31.33%;
    margin: 1%;
  }
}

@supports (display: grid) {
  .c-mosaic_item:nth-child(1) {
    display: none;
  }

  .c-mosaic {
    display: grid;
    grid-template-columns: 1fr;
    //grid-template-rows: 1fr 1fr 1fr;
    grid-auto-rows: minmax(100px, auto);
    grid-column-gap: 20px;
    clear: both;
    grid-row-gap: 5px;
    margin: 0 5px;
    @include mq($from: tablet) {
      margin: 0;
      grid-row-gap: 20px;
      grid-template-columns: repeat(2, 1fr);
      grid-auto-rows: minmax(300px, auto);
    }
    @include mq($from: desktop) {
      margin: 0;
      grid-template-columns: repeat(3, 1fr);
    }
    @include mq($from: wide) {
      margin: 0;
      grid-template-columns: repeat(4, 1fr);
    }
  }
  .c-mosaic_item {
    background: $white;
    margin: 0;
    @include mq($from: tablet) {
      margin: 0;
    }
    @include mq($from: desktop) {
      margin: 0;
    }
  }

  // Child 1 is a big picture

  .c-mosaic_item:nth-child(1) {
    display: grid;
    grid-template-columns: 1fr;
    background-size: cover;
    background-position: center;
    @include mq($from: tablet) {
      display: grid;
      grid-column-gap: 20px;
      grid-row-gap: 20px;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 1fr 1fr;
      grid-row: 1 / 3;
      grid-column: 1 / 3;
    }

    .c-mosaic_item-content {
      grid-row: 2 / 3;
      grid-column: 1 / 2;
    }
  }

  // The grid changes according to the number of children

  .c-mosaic_item {
    width: 100%;
    @include mq($from: tablet, $until: desktop) {
      //2
      &:nth-child(2):nth-last-child(1) {
        grid-column: 1 / 3;
      }
      //4
      &:nth-child(4):nth-last-child(1) {
        grid-column: 1 / 3;
      }
      //6
      &:nth-child(6):nth-last-child(1) {
        grid-column: 1 / 3;
      }
      //8
      &:nth-child(3):nth-last-child(6) {
        grid-column: 1 / 3;
      }
      &:nth-child(8):nth-last-child(1) {
        grid-column: 1 / 3;
      }

      //10
      &:nth-child(5):nth-last-child(6) {
        grid-column: 1 / 3;
      }
      &:nth-child(10):nth-last-child(1) {
        grid-column: 1 / 3;
      }
      //12
      &:nth-child(5):nth-last-child(6) {
        grid-column: 1 / 3;
      }
      &:nth-child(12):nth-last-child(1) {
        grid-column: 1 / 3;
      }
    }
    @include mq($from: desktop, $until: wide) {
      //2
      &:nth-child(2):nth-child(9):nth-last-child(1) {
        grid-row: 1 / 3;
      }
      //4
      &:nth-child(2):nth-last-child(3) {
        grid-row: 1 / 3;
      }
      &:nth-child(4):nth-last-child(1) {
        grid-column: 2 / 4;
      }
      //5
      &:nth-child(5):nth-last-child(1) {
        grid-column: 2 / 4;
      }
      //7
      &:nth-child(2):nth-last-child(6) {
        grid-row: 1 / 3;
      }
      &:nth-child(6):nth-last-child(2) {
        grid-column: 1 / 3;
      }
      //8
      &:nth-child(8):nth-last-child(1) {
        grid-column: 2 / 4;
      }
      //10
      &:nth-child(10):nth-last-child(1) {
        grid-row: 5 / 6;
        grid-column: 2 / 4;
      }
      &:nth-child(9):nth-last-child(2) {
        grid-row: 4 / 5;
        grid-column: 2 / 4;
      }

      //11
      &:nth-child(9):nth-last-child(3) {
        grid-row: 4 / 6;
        grid-column: 3 / 4;
      }
    }
    @include mq($from: wide) {
      //2
      &:nth-child(2):nth-last-child(1) {
        grid-column: 3 / 5;
        grid-row: 1 / 3;
      }
      //3
      &:nth-child(2):nth-last-child(2) {
        grid-column: 3 / 5;
      }
      &:nth-child(3):nth-last-child(1) {
        grid-column: 3 / 5;
      }
      //4
      &:nth-child(4):nth-last-child(1) {
        grid-column: 3 / 5;
      }
      //6
      &:nth-child(2):nth-last-child(5) {
        grid-column: 3 / 5;
      }
      &:nth-child(4):nth-last-child(3) {
        grid-row: 2 / 4;
      }
      &:nth-child(5):nth-last-child(2) {
        grid-column: 1 / 3;
      }
      //7
      &:nth-child(5):nth-last-child(3) {
        grid-row: 3 / 4;
        grid-column: 3 / 5;
      }
      &:nth-child(4):nth-last-child(4) {
        grid-row: 2 / 3;
        grid-column: 3 / 5;
      }
      //8
      &:nth-child(8):nth-last-child(1) {
        grid-column: 3 / 5;
      }
      //10
      &:nth-child(9):nth-last-child(2) {
        grid-row: 3 / 4;
        grid-column: 3 / 5;
      }
      &:nth-child(10):nth-last-child(1) {
        grid-column: 3 / 5;
      }
      &:nth-child(5):nth-last-child(6) {
        grid-row: 1 / 3;
        grid-column: 4 / 5;
      }
      //11
      &:nth-child(5):nth-last-child(7) {
        grid-row: 1 / 3;
        grid-column: 4 / 5;
      }
      &:nth-child(11):nth-last-child(1) {
        grid-column: 3 / 5;
      }
    }
  }
  .c-mosaic_item--single:nth-child(1) {
    grid-column: 1/5;

    & + .c-mosaic_item:nth-child(2) {
      grid-column: 1 / 5;
      @include mq($from: desktop) {
        grid-row: 2 / 3;
        grid-column: 1 / 3;
      }
    }
  }
}

// Variation in background color
@supports (display: grid) {
  .c-mosaic_item:nth-child(1) {
    .c-mosaic_item-content {
      @include mq($from: tablet) {
        background-color: $brand-dark;
        .c-mosaic_item-content__meta,
        .c-mosaic_item-title {
          color: $white;
        }
      }
    }
  }
}
.c-mosaic_item:nth-child(4n + 1) {
  background-color: $brand-medium;
  background-position: center;
  background-size: cover;
}

.c-mosaic_item:nth-child(4n + 2) {
  background-color: $brand-main;
  color: $white;
}
.c-mosaic_item:nth-child(4n + 3) {
  background-color: $brand-dark;
  color: $white;
}
.c-mosaic_item:nth-child(4n + 4) {
  border: solid 1px $brand-dark;
  background-color: $white;
  color: $brand-dark;
}

// Content inside the grid items

.c-mosaic_item-content {
  display: flex;
  height: 100%;
  flex-direction: column;
  justify-content: space-between;
  padding: $spacing;
}

.c-mosaic_item-content__meta {
  font-family: $font-sans;
  font-weight: 300;
  text-transform: uppercase;
  padding-bottom: $spacing;
  @include inuit-font-size(14px);
  @include mq($from: tablet) {
    @include inuit-font-size($font-size-tiny);
  }
}

.c-mosaic_item-title {
  hyphens: none;
  font-weight: 400;
  @include inuit-font-size($font-size-small * 1.1, $font-size-large);
  @include mq($from: tablet) {
    font-weight: 300;
    @include inuit-font-size($font-size-normal, $font-size-large * 1.1);
  }
}

// Color overlay

.c-mosaic_item--backgroundImage {
  box-shadow: inset 0 0 0 500px rgba(0, 0, 0, 0.2);
  transition: box-shadow 0.4s;
}

.c-mosaic_item--backgroundImage-invert {
  box-shadow: inset 0 0 0 500px rgba(255, 255, 255, 0.4);
}

// Hover

.c-mosaic_item--backgroundImage:hover {
  box-shadow: inset 0 0 0 500px rgba(0, 0, 0, 0);
}

a.c-mosaic_item,
.c-mosaic_item-content {
  border-bottom: 0;
  transition: all 0.1s;
  transform-origin: center center;
  will-change: transform, opacity;
}

a.c-mosaic_item:hover {
  color: white;
  border-bottom: 0;
}
@supports (display: grid) {
  .c-mosaic_item:nth-child(1):hover {
    .c-mosaic_item-content {
      @include mq($from: tablet) {
        background-color: $brand-dark-hover;
      }
    }
  }
}
.c-mosaic_item:nth-child(4n + 2):hover {
  background-color: $brand-medium;
}
.c-mosaic_item:nth-child(4n + 3):hover {
  background-color: $brand-dark-hover;
}
.c-mosaic_item:nth-child(4n + 4):hover {
  background-color: $brand-lightest;
  color: $brand-dark;
  border: 1px solid $brand-dark;
}
.c-mosaic_item:nth-child(4n + 5):hover {
  background-color: $brand-medium;
}

.c-mosaic_item {
  position: relative;
}
.c-mosaic_item--backgroundImage::after {
  content: '';
  position: absolute;
  display: block;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  opacity: 0.3;
}
